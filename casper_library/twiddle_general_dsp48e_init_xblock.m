function twiddle_general_dsp48e_init_xblock(Coeffs, StepPeriod, coeff_bit_width, input_bit_width, bram_latency, conv_latency, quantization, overflow, arch, coeffs_bram)



%% inports
xlsub2_a = xInport('a');
xlsub2_b = xInport('b');
xlsub2_sync = xInport('sync');

%% outports
xlsub2_a_re = xOutport('a_re');
xlsub2_a_im = xOutport('a_im');
xlsub2_bw_re = xOutport('bw_re');
xlsub2_bw_im = xOutport('bw_im');
xlsub2_sync_out = xOutport('sync_out');

%% diagram

% block: twiddles_collections/twiddle_general_dsp48e/delay0
xlsub2_delay0_out1 = xSignal;
xlsub2_delay0 = xBlock(struct('source', 'Delay', 'name', 'delay0'), ...
                       struct('latency', bram_latency + 4 + conv_latency), ...
                       {xlsub2_a}, ...
                       {xlsub2_delay0_out1});

% block: twiddles_collections/twiddle_general_dsp48e/delay1
xlsub2_delay1_out1 = xSignal;
xlsub2_delay1 = xBlock(struct('source', 'Delay', 'name', 'delay1'), ...
                       struct('latency', bram_latency, ...
                              'reg_retiming', 'on'), ...
                       {xlsub2_b}, ...
                       {xlsub2_delay1_out1});

% block: twiddles_collections/twiddle_general_dsp48e/delay2
xlsub2_delay2 = xBlock(struct('source', 'Delay', 'name', 'delay2'), ...
                       struct('latency', bram_latency + 4 + conv_latency), ...
                       {xlsub2_sync}, ...
                       {xlsub2_sync_out});

% block: twiddles_collections/twiddle_general_dsp48e/c_to_ri0
xlsub2_c_to_ri0_sub = xBlock(struct('source', str2func('c_to_ri_xblock'), 'name', 'c_to_ri0'), ...
                         {coeff_bit_width, ...
                          coeff_bit_width-1}, ...
                         {xlsub2_delay0_out1}, ...
                         {xlsub2_a_re, xlsub2_a_im});

% block: twiddles_collections/twiddle_general_dsp48e/c_to_ri1
xlsub2_c_to_ri1_out1 = xSignal;
xlsub2_c_to_ri1_out2 = xSignal;
xlsub2_c_to_ri1_sub = xBlock(struct('source',str2func('c_to_ri_xblock'), 'name', 'c_to_ri1'), ...
                         {coeff_bit_width, ...
                          coeff_bit_width-1}, ...
                         {xlsub2_delay1_out1}, ...
                         {xlsub2_c_to_ri1_out1, xlsub2_c_to_ri1_out2});

% block: twiddles_collections/twiddle_general_dsp48e/c_to_ri2
xlsub2_coeff_gen_out1 = xSignal;
xlsub2_c_to_ri2_out1 = xSignal;
xlsub2_c_to_ri2_out2 = xSignal;
xlsub2_c_to_ri2_sub = xBlock(struct('source', str2func('c_to_ri_xblock'), 'name', 'c_to_ri2'), ...
                               {coeff_bit_width, ...
                                coeff_bit_width-1}, ...              
                             {xlsub2_coeff_gen_out1}, ...
                             {xlsub2_c_to_ri2_out1, xlsub2_c_to_ri2_out2});

% block: twiddles_collections/twiddle_general_dsp48e/cmult
xlsub2_cmult_sub = xBlock(struct('source', str2func('cmult_dsp48e_init_xblock'), 'name', 'cmult'), ...
                      {input_bit_width, input_bit_width - 1, input_bit_width, input_bit_width - 2, 'off', 'off', input_bit_width + 4, input_bit_width + 1, tostring(quantization), tostring(overflow), conv_latency}, ...
                      {xlsub2_c_to_ri1_out1, xlsub2_c_to_ri1_out2, xlsub2_c_to_ri2_out1, xlsub2_c_to_ri2_out2}, ...
                      {xlsub2_bw_re, xlsub2_bw_im});

% block: twiddles_collections/twiddle_general_dsp48e/coeff_gen
xlsub2_coeff_gen_sub = xBlock(struct('source',str2func('coeff_gen_init_xblock'), 'name', 'coeff_gen'), ...
                          {Coeffs,coeff_bit_width, StepPeriod, bram_latency, coeffs_bram}, ...
                          {xlsub2_sync}, ...
                          {xlsub2_coeff_gen_out1});
                      
                      

end


% function xlsub2_c_to_ri0(n_bits, bin_pt)
% 
% 
% 
% %% inports
% xlsub3_c = xInport('c');
% 
% %% outports
% xlsub3_re = xOutport('re');
% xlsub3_im = xOutport('im');
% 
% %% diagram
% 
% % block: twiddles_collections/twiddle_general_dsp48e/c_to_ri0/force_im
% xlsub3_slice_im_out1 = xSignal;
% xlsub3_force_im = xBlock(struct('source', 'Reinterpret', 'name', 'force_im'), ...
%                          struct('force_arith_type', 'on', ...
%                                 'arith_type', 'Signed  (2''s comp)', ...
%                                 'force_bin_pt', 'on', ...
%                                 'bin_pt', bin_pt), ...
%                          {xlsub3_slice_im_out1}, ...
%                          {xlsub3_im});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/c_to_ri0/force_re
% xlsub3_slice_re_out1 = xSignal;
% xlsub3_force_re = xBlock(struct('source', 'Reinterpret', 'name', 'force_re'), ...
%                          struct('force_arith_type', 'on', ...
%                                 'arith_type', 'Signed  (2''s comp)', ...
%                                 'force_bin_pt', 'on', ...
%                                 'bin_pt', bin_pt), ...
%                          {xlsub3_slice_re_out1}, ...
%                          {xlsub3_re});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/c_to_ri0/slice_im
% xlsub3_slice_im = xBlock(struct('source', 'Slice', 'name', 'slice_im'), ...
%                          struct('nbits', n_bits, ...
%                                 'mode', 'Lower Bit Location + Width'), ...
%                          {xlsub3_c}, ...
%                          {xlsub3_slice_im_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/c_to_ri0/slice_re
% xlsub3_slice_re = xBlock(struct('source', 'Slice', 'name', 'slice_re'), ...
%                          struct('nbits', n_bits), ...
%                          {xlsub3_c}, ...
%                          {xlsub3_slice_re_out1});
% 
% 
% 
% end

% function xlsub2_c_to_ri1(n_bits, bin_pt)
% 
% 
% 
% %% inports
% xlsub3_c = xInport('c');
% 
% %% outports
% xlsub3_re = xOutport('re');
% xlsub3_im = xOutport('im');
% 
% %% diagram
% 
% % block: twiddles_collections/twiddle_general_dsp48e/c_to_ri1/force_im
% xlsub3_slice_im_out1 = xSignal;
% xlsub3_force_im = xBlock(struct('source', 'Reinterpret', 'name', 'force_im'), ...
%                          struct('force_arith_type', 'on', ...
%                                 'arith_type', 'Signed  (2''s comp)', ...
%                                 'force_bin_pt', 'on', ...
%                                 'bin_pt', bin_pt), ...
%                          {xlsub3_slice_im_out1}, ...
%                          {xlsub3_im});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/c_to_ri1/force_re
% xlsub3_slice_re_out1 = xSignal;
% xlsub3_force_re = xBlock(struct('source', 'Reinterpret', 'name', 'force_re'), ...
%                          struct('force_arith_type', 'on', ...
%                                 'arith_type', 'Signed  (2''s comp)', ...
%                                 'force_bin_pt', 'on', ...
%                                 'bin_pt', bin_pt), ...
%                          {xlsub3_slice_re_out1}, ...
%                          {xlsub3_re});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/c_to_ri1/slice_im
% xlsub3_slice_im = xBlock(struct('source', 'Slice', 'name', 'slice_im'), ...
%                          struct('nbits', n_bits, ...
%                                 'mode', 'Lower Bit Location + Width'), ...
%                          {xlsub3_c}, ...
%                          {xlsub3_slice_im_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/c_to_ri1/slice_re
% xlsub3_slice_re = xBlock(struct('source', 'Slice', 'name', 'slice_re'), ...
%                          struct('nbits', n_bits), ...
%                          {xlsub3_c}, ...
%                          {xlsub3_slice_re_out1});
% 
% 
% 
% end

% function xlsub2_c_to_ri2(n_bits, bin_pt)
% 
% 
% 
% %% inports
% xlsub3_c = xInport('c');
% 
% %% outports
% xlsub3_re = xOutport('re');
% xlsub3_im = xOutport('im');
% 
% %% diagram
% 
% % block: twiddles_collections/twiddle_general_dsp48e/c_to_ri2/force_im
% xlsub3_slice_im_out1 = xSignal;
% xlsub3_force_im = xBlock(struct('source', 'Reinterpret', 'name', 'force_im'), ...
%                          struct('force_arith_type', 'on', ...
%                                 'arith_type', 'Signed  (2''s comp)', ...
%                                 'force_bin_pt', 'on', ...
%                                 'bin_pt', bin_pt), ...
%                          {xlsub3_slice_im_out1}, ...
%                          {xlsub3_im});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/c_to_ri2/force_re
% xlsub3_slice_re_out1 = xSignal;
% xlsub3_force_re = xBlock(struct('source', 'Reinterpret', 'name', 'force_re'), ...
%                          struct('force_arith_type', 'on', ...
%                                 'arith_type', 'Signed  (2''s comp)', ...
%                                 'force_bin_pt', 'on', ...
%                                 'bin_pt', bin_pt), ...
%                          {xlsub3_slice_re_out1}, ...
%                          {xlsub3_re});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/c_to_ri2/slice_im
% xlsub3_slice_im = xBlock(struct('source', 'Slice', 'name', 'slice_im'), ...
%                          struct('nbits', n_bits, ...
%                                 'mode', 'Lower Bit Location + Width'), ...
%                          {xlsub3_c}, ...
%                          {xlsub3_slice_im_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/c_to_ri2/slice_re
% xlsub3_slice_re = xBlock(struct('source', 'Slice', 'name', 'slice_re'), ...
%                          struct('nbits', n_bits), ...
%                          {xlsub3_c}, ...
%                          {xlsub3_slice_re_out1});
% 
% 
% 
% end

% function xlsub2_cmult(n_bits_a, bin_pt_a, n_bits_b, bin_pt_b, conjugated, full_precision, n_bits_c, bin_pt_c, quantization, overflow, cast_latency)
% 
% 
% 
% %% inports
% xlsub3_a_re = xInport('a_re');
% xlsub3_a_im = xInport('a_im');
% xlsub3_b_re = xInport('b_re');
% xlsub3_b_im = xInport('b_im');
% 
% %% outports
% xlsub3_c_re = xOutport('c_re');
% xlsub3_c_im = xOutport('c_im');
% 
% %% diagram
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/Convert
% xlsub3_reinterp_a_im_out1 = xSignal;
% xlsub3_Convert_out1 = xSignal;
% xlsub3_Convert = xBlock(struct('source', 'Convert', 'name', 'Convert'), ...
%                         struct('n_bits', 30, ...
%                                'bin_pt', 0, ...
%                                'pipeline', 'on'), ...
%                         {xlsub3_reinterp_a_im_out1}, ...
%                         {xlsub3_Convert_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/Convert1
% xlsub3_Convert1_out1 = xSignal;
% xlsub3_Convert1 = xBlock(struct('source', 'Convert', 'name', 'Convert1'), ...
%                          struct('n_bits', 30, ...
%                                 'bin_pt', 0, ...
%                                 'pipeline', 'on'), ...
%                          {xlsub3_reinterp_a_im_out1}, ...
%                          {xlsub3_Convert1_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/Convert2
% xlsub3_reinterp_a_re_out1 = xSignal;
% xlsub3_Convert2_out1 = xSignal;
% xlsub3_Convert2 = xBlock(struct('source', 'Convert', 'name', 'Convert2'), ...
%                          struct('n_bits', 30, ...
%                                 'bin_pt', 0, ...
%                                 'pipeline', 'on'), ...
%                          {xlsub3_reinterp_a_re_out1}, ...
%                          {xlsub3_Convert2_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/Convert3
% xlsub3_reinterp_b_im_out1 = xSignal;
% xlsub3_Convert3_out1 = xSignal;
% xlsub3_Convert3 = xBlock(struct('source', 'Convert', 'name', 'Convert3'), ...
%                          struct('n_bits', 18, ...
%                                 'bin_pt', 0, ...
%                                 'pipeline', 'on'), ...
%                          {xlsub3_reinterp_b_im_out1}, ...
%                          {xlsub3_Convert3_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/Convert4
% xlsub3_reinterp_b_re_out1 = xSignal;
% xlsub3_Convert4_out1 = xSignal;
% xlsub3_Convert4 = xBlock(struct('source', 'Convert', 'name', 'Convert4'), ...
%                          struct('n_bits', 18, ...
%                                 'bin_pt', 0, ...
%                                 'pipeline', 'on'), ...
%                          {xlsub3_reinterp_b_re_out1}, ...
%                          {xlsub3_Convert4_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/Convert5
% xlsub3_Convert5_out1 = xSignal;
% xlsub3_Convert5 = xBlock(struct('source', 'Convert', 'name', 'Convert5'), ...
%                          struct('n_bits', 30, ...
%                                 'bin_pt', 0, ...
%                                 'pipeline', 'on'), ...
%                          {xlsub3_reinterp_a_re_out1}, ...
%                          {xlsub3_Convert5_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/Convert6
% xlsub3_Convert6_out1 = xSignal;
% xlsub3_Convert6 = xBlock(struct('source', 'Convert', 'name', 'Convert6'), ...
%                          struct('n_bits', 18, ...
%                                 'bin_pt', 0, ...
%                                 'pipeline', 'on'), ...
%                          {xlsub3_reinterp_b_re_out1}, ...
%                          {xlsub3_Convert6_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/Convert7
% xlsub3_Convert7_out1 = xSignal;
% xlsub3_Convert7 = xBlock(struct('source', 'Convert', 'name', 'Convert7'), ...
%                          struct('n_bits', 18, ...
%                                 'bin_pt', 0, ...
%                                 'pipeline', 'on'), ...
%                          {xlsub3_reinterp_b_im_out1}, ...
%                          {xlsub3_Convert7_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/DSP48E_0
% xlsub3_opmode0_out1 = xSignal;
% xlsub3_alumode0_out1 = xSignal;
% xlsub3_carryin0_out1 = xSignal;
% xlsub3_carryinsel0_out1 = xSignal;
% xlsub3_DSP48E_0_out1 = xSignal;
% xlsub3_DSP48E_0_out2 = xSignal;
% xlsub3_DSP48E_0 = xBlock(struct('source', 'DSP48E', 'name', 'DSP48E_0'), ...
%                          struct('use_pcout', 'on'), ...
%                          {xlsub3_Convert5_out1, xlsub3_Convert7_out1, xlsub3_opmode0_out1, xlsub3_alumode0_out1, xlsub3_carryin0_out1, xlsub3_carryinsel0_out1}, ...
%                          {xlsub3_DSP48E_0_out1, xlsub3_DSP48E_0_out2});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/DSP48E_1
% xlsub3_opmode1_out1 = xSignal;
% xlsub3_alumode1_out1 = xSignal;
% xlsub3_carryin1_out1 = xSignal;
% xlsub3_carryinsel1_out1 = xSignal;
% xlsub3_DSP48E_1_out1 = xSignal;
% xlsub3_DSP48E_1 = xBlock(struct('source', 'DSP48E', 'name', 'DSP48E_1'), ...
%                          struct('use_pcin', 'on', ...
%                                 'pipeline_a', '2', ...
%                                 'pipeline_b', '2'), ...
%                          {xlsub3_Convert1_out1, xlsub3_Convert6_out1, xlsub3_DSP48E_0_out2, xlsub3_opmode1_out1, xlsub3_alumode1_out1, xlsub3_carryin1_out1, xlsub3_carryinsel1_out1}, ...
%                          {xlsub3_DSP48E_1_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/DSP48E_2
% xlsub3_opmode2_out1 = xSignal;
% xlsub3_alumode2_out1 = xSignal;
% xlsub3_carryin2_out1 = xSignal;
% xlsub3_carryinsel2_out1 = xSignal;
% xlsub3_DSP48E_2_out1 = xSignal;
% xlsub3_DSP48E_2_out2 = xSignal;
% xlsub3_DSP48E_2 = xBlock(struct('source', 'DSP48E', 'name', 'DSP48E_2'), ...
%                          struct('use_pcout', 'on'), ...
%                          {xlsub3_Convert2_out1, xlsub3_Convert4_out1, xlsub3_opmode2_out1, xlsub3_alumode2_out1, xlsub3_carryin2_out1, xlsub3_carryinsel2_out1}, ...
%                          {xlsub3_DSP48E_2_out1, xlsub3_DSP48E_2_out2});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/DSP48E_3
% xlsub3_opmode3_out1 = xSignal;
% xlsub3_alumode3_out1 = xSignal;
% xlsub3_carryin3_out1 = xSignal;
% xlsub3_carryinsel3_out1 = xSignal;
% xlsub3_DSP48E_3_out1 = xSignal;
% xlsub3_DSP48E_3 = xBlock(struct('source', 'DSP48E', 'name', 'DSP48E_3'), ...
%                          struct('use_pcin', 'on', ...
%                                 'pipeline_a', '2', ...
%                                 'pipeline_b', '2'), ...
%                          {xlsub3_Convert_out1, xlsub3_Convert3_out1, xlsub3_DSP48E_2_out2, xlsub3_opmode3_out1, xlsub3_alumode3_out1, xlsub3_carryin3_out1, xlsub3_carryinsel3_out1}, ...
%                          {xlsub3_DSP48E_3_out1});
% 
% 
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/alumode0
% xlsub3_alumode0 = xBlock(struct('source', 'Constant', 'name', 'alumode0'), ...
%                          struct('arith_type', 'Unsigned', ...
%                                 'const', 0, ...
%                                 'n_bits', 4, ...
%                                 'bin_pt', 0), ...
%                          {}, ...
%                          {xlsub3_alumode0_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/alumode1
% xlsub3_alumode1 = xBlock(struct('source', 'Constant', 'name', 'alumode1'), ...
%                          struct('arith_type', 'Unsigned', ...
%                                 'const', 0, ...
%                                 'n_bits', 4, ...
%                                 'bin_pt', 0), ...
%                          {}, ...
%                          {xlsub3_alumode1_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/alumode2
% xlsub3_alumode2 = xBlock(struct('source', 'Constant', 'name', 'alumode2'), ...
%                          struct('arith_type', 'Unsigned', ...
%                                 'const', 0, ...
%                                 'n_bits', 4, ...
%                                 'bin_pt', 0), ...
%                          {}, ...
%                          {xlsub3_alumode2_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/alumode3
% xlsub3_alumode3 = xBlock(struct('source', 'Constant', 'name', 'alumode3'), ...
%                          struct('arith_type', 'Unsigned', ...
%                                 'const', 3, ...
%                                 'n_bits', 4, ...
%                                 'bin_pt', 0), ...
%                          {}, ...
%                          {xlsub3_alumode3_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/carryin0
% xlsub3_carryin0 = xBlock(struct('source', 'Constant', 'name', 'carryin0'), ...
%                          struct('arith_type', 'Unsigned', ...
%                                 'const', 0, ...
%                                 'n_bits', 1, ...
%                                 'bin_pt', 0), ...
%                          {}, ...
%                          {xlsub3_carryin0_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/carryin1
% xlsub3_carryin1 = xBlock(struct('source', 'Constant', 'name', 'carryin1'), ...
%                          struct('arith_type', 'Unsigned', ...
%                                 'const', 0, ...
%                                 'n_bits', 1, ...
%                                 'bin_pt', 0), ...
%                          {}, ...
%                          {xlsub3_carryin1_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/carryin2
% xlsub3_carryin2 = xBlock(struct('source', 'Constant', 'name', 'carryin2'), ...
%                          struct('arith_type', 'Unsigned', ...
%                                 'const', 0, ...
%                                 'n_bits', 1, ...
%                                 'bin_pt', 0), ...
%                          {}, ...
%                          {xlsub3_carryin2_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/carryin3
% xlsub3_carryin3 = xBlock(struct('source', 'Constant', 'name', 'carryin3'), ...
%                          struct('arith_type', 'Unsigned', ...
%                                 'const', 0, ...
%                                 'n_bits', 1, ...
%                                 'bin_pt', 0), ...
%                          {}, ...
%                          {xlsub3_carryin3_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/carryinsel0
% xlsub3_carryinsel0 = xBlock(struct('source', 'Constant', 'name', 'carryinsel0'), ...
%                             struct('arith_type', 'Unsigned', ...
%                                    'const', 0, ...
%                                    'n_bits', 3, ...
%                                    'bin_pt', 0), ...
%                             {}, ...
%                             {xlsub3_carryinsel0_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/carryinsel1
% xlsub3_carryinsel1 = xBlock(struct('source', 'Constant', 'name', 'carryinsel1'), ...
%                             struct('arith_type', 'Unsigned', ...
%                                    'const', 0, ...
%                                    'n_bits', 3, ...
%                                    'bin_pt', 0), ...
%                             {}, ...
%                             {xlsub3_carryinsel1_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/carryinsel2
% xlsub3_carryinsel2 = xBlock(struct('source', 'Constant', 'name', 'carryinsel2'), ...
%                             struct('arith_type', 'Unsigned', ...
%                                    'const', 0, ...
%                                    'n_bits', 3, ...
%                                    'bin_pt', 0), ...
%                             {}, ...
%                             {xlsub3_carryinsel2_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/carryinsel3
% xlsub3_carryinsel3 = xBlock(struct('source', 'Constant', 'name', 'carryinsel3'), ...
%                             struct('arith_type', 'Unsigned', ...
%                                    'const', 0, ...
%                                    'n_bits', 3, ...
%                                    'bin_pt', 0), ...
%                             {}, ...
%                             {xlsub3_carryinsel3_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/cast_c_im
% xlsub3_reinterp_c_im_out1 = xSignal;
% xlsub3_cast_c_im = xBlock(struct('source', 'Convert', 'name', 'cast_c_im'), ...
%                           struct('n_bits', 22, ...
%                                  'bin_pt', 19, ...
%                                  'pipeline', 'on'), ...
%                           {xlsub3_reinterp_c_im_out1}, ...
%                           {xlsub3_c_im});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/cast_c_re
% xlsub3_reinterp_c_re_out1 = xSignal;
% xlsub3_cast_c_re = xBlock(struct('source', 'Convert', 'name', 'cast_c_re'), ...
%                           struct('n_bits', 22, ...
%                                  'bin_pt', 19, ...
%                                  'pipeline', 'on'), ...
%                           {xlsub3_reinterp_c_re_out1}, ...
%                           {xlsub3_c_re});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/opmode0
% xlsub3_opmode0 = xBlock(struct('source', 'Constant', 'name', 'opmode0'), ...
%                         struct('arith_type', 'Unsigned', ...
%                                'const', 5, ...
%                                'n_bits', 7, ...
%                                'bin_pt', 0), ...
%                         {}, ...
%                         {xlsub3_opmode0_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/opmode1
% xlsub3_opmode1 = xBlock(struct('source', 'Constant', 'name', 'opmode1'), ...
%                         struct('arith_type', 'Unsigned', ...
%                                'const', 21, ...
%                                'n_bits', 7, ...
%                                'bin_pt', 0), ...
%                         {}, ...
%                         {xlsub3_opmode1_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/opmode2
% xlsub3_opmode2 = xBlock(struct('source', 'Constant', 'name', 'opmode2'), ...
%                         struct('arith_type', 'Unsigned', ...
%                                'const', 5, ...
%                                'n_bits', 7, ...
%                                'bin_pt', 0), ...
%                         {}, ...
%                         {xlsub3_opmode2_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/opmode3
% xlsub3_opmode3 = xBlock(struct('source', 'Constant', 'name', 'opmode3'), ...
%                         struct('arith_type', 'Unsigned', ...
%                                'const', 21, ...
%                                'n_bits', 7, ...
%                                'bin_pt', 0), ...
%                         {}, ...
%                         {xlsub3_opmode3_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/realign_a_im
% xlsub3_realign_a_im_out1 = xSignal;
% xlsub3_realign_a_im = xBlock(struct('source', 'Convert', 'name', 'realign_a_im'), ...
%                              struct('n_bits', 18, ...
%                                     'bin_pt', 17, ...
%                                     'pipeline', 'on'), ...
%                              {xlsub3_a_im}, ...
%                              {xlsub3_realign_a_im_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/realign_a_re
% xlsub3_realign_a_re_out1 = xSignal;
% xlsub3_realign_a_re = xBlock(struct('source', 'Convert', 'name', 'realign_a_re'), ...
%                              struct('n_bits', 18, ...
%                                     'bin_pt', 17, ...
%                                     'pipeline', 'on'), ...
%                              {xlsub3_a_re}, ...
%                              {xlsub3_realign_a_re_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/realign_b_im
% xlsub3_realign_b_im_out1 = xSignal;
% xlsub3_realign_b_im = xBlock(struct('source', 'Convert', 'name', 'realign_b_im'), ...
%                              struct('n_bits', 18, ...
%                                     'bin_pt', 16, ...
%                                     'pipeline', 'on'), ...
%                              {xlsub3_b_im}, ...
%                              {xlsub3_realign_b_im_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/realign_b_re
% xlsub3_realign_b_re_out1 = xSignal;
% xlsub3_realign_b_re = xBlock(struct('source', 'Convert', 'name', 'realign_b_re'), ...
%                              struct('n_bits', 18, ...
%                                     'bin_pt', 16, ...
%                                     'pipeline', 'on'), ...
%                              {xlsub3_b_re}, ...
%                              {xlsub3_realign_b_re_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/reinterp_a_im
% xlsub3_reinterp_a_im = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_a_im'), ...
%                               struct('force_arith_type', 'on', ...
%                                      'arith_type', 'Signed  (2''s comp)', ...
%                                      'force_bin_pt', 'on'), ...
%                               {xlsub3_realign_a_im_out1}, ...
%                               {xlsub3_reinterp_a_im_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/reinterp_a_re
% xlsub3_reinterp_a_re = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_a_re'), ...
%                               struct('force_arith_type', 'on', ...
%                                      'arith_type', 'Signed  (2''s comp)', ...
%                                      'force_bin_pt', 'on'), ...
%                               {xlsub3_realign_a_re_out1}, ...
%                               {xlsub3_reinterp_a_re_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/reinterp_b_im
% xlsub3_reinterp_b_im = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_b_im'), ...
%                               struct('force_arith_type', 'on', ...
%                                      'arith_type', 'Signed  (2''s comp)', ...
%                                      'force_bin_pt', 'on'), ...
%                               {xlsub3_realign_b_im_out1}, ...
%                               {xlsub3_reinterp_b_im_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/reinterp_b_re
% xlsub3_reinterp_b_re = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_b_re'), ...
%                               struct('force_arith_type', 'on', ...
%                                      'arith_type', 'Signed  (2''s comp)', ...
%                                      'force_bin_pt', 'on'), ...
%                               {xlsub3_realign_b_re_out1}, ...
%                               {xlsub3_reinterp_b_re_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/reinterp_c_im
% xlsub3_reinterp_c_im = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_c_im'), ...
%                               struct('force_arith_type', 'on', ...
%                                      'arith_type', 'Signed  (2''s comp)', ...
%                                      'force_bin_pt', 'on', ...
%                                      'bin_pt', 19), ...
%                               {xlsub3_DSP48E_1_out1}, ...
%                               {xlsub3_reinterp_c_im_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/cmult/reinterp_c_re
% xlsub3_reinterp_c_re = xBlock(struct('source', 'Reinterpret', 'name', 'reinterp_c_re'), ...
%                               struct('force_arith_type', 'on', ...
%                                      'arith_type', 'Signed  (2''s comp)', ...
%                                      'force_bin_pt', 'on', ...
%                                      'bin_pt', 19), ...
%                               {xlsub3_DSP48E_3_out1}, ...
%                               {xlsub3_reinterp_c_re_out1});
% 
% 
% 
% end

% function xlsub2_coeff_gen(Coeffs, coeff_bit_width, StepPeriod, bram_latency, coeffs_bram)
% 
% 
% 
% %% inports
% xlsub3_rst = xInport('rst');
% 
% %% outports
% xlsub3_w = xOutport('w');
% 
% %% diagram
% 
% % block: twiddles_collections/twiddle_general_dsp48e/coeff_gen/Counter
% xlsub3_Counter_out1 = xSignal;
% xlsub3_Counter = xBlock(struct('source', 'Counter', 'name', 'Counter'), ...
%                         struct('n_bits', 1, ...
%                                'rst', 'on'), ...
%                         {xlsub3_rst}, ...
%                         {xlsub3_Counter_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/coeff_gen/ROM
% xlsub3_Slice_out1 = xSignal;
% xlsub3_ROM_out1 = xSignal;
% xlsub3_ROM = xBlock(struct('source', 'ROM', 'name', 'ROM'), ...
%                     struct('depth', 2, ...
%                            'initVector', [0                                      0], ...
%                            'distributed_mem', 'Distributed memory', ...
%                            'latency', 2, ...
%                            'n_bits', 18, ...
%                            'bin_pt', 16), ...
%                     {xlsub3_Slice_out1}, ...
%                     {xlsub3_ROM_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/coeff_gen/ROM1
% xlsub3_ROM1_out1 = xSignal;
% xlsub3_ROM1 = xBlock(struct('source', 'ROM', 'name', 'ROM1'), ...
%                      struct('depth', 2, ...
%                             'initVector', [0                                      1], ...
%                             'distributed_mem', 'Distributed memory', ...
%                             'latency', 2, ...
%                             'n_bits', 18, ...
%                             'bin_pt', 16), ...
%                      {xlsub3_Slice_out1}, ...
%                      {xlsub3_ROM1_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/coeff_gen/Slice
% xlsub3_Slice = xBlock(struct('source', 'Slice', 'name', 'Slice'), ...
%                       [], ...
%                       {xlsub3_Counter_out1}, ...
%                       {xlsub3_Slice_out1});
% 
% % block: twiddles_collections/twiddle_general_dsp48e/coeff_gen/ri_to_c
% xlsub3_ri_to_c = xBlock(struct('source', 'casper_library_misc/ri_to_c', 'name', 'ri_to_c'), ...
%                         [], ...
%                         {xlsub3_ROM_out1, xlsub3_ROM1_out1}, ...
%                         {xlsub3_w});
% 
% 
% 
% end



