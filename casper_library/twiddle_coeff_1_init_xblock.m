function twiddle_coeff_1_init_xblock(FFTSize, input_bit_width, add_latency, mult_latency, bram_latency, conv_latency, opt_target)

if(strcmp(opt_target, 'logic')), 
    latency = mult_latency+add_latency+bram_latency+conv_latency;
else
    latency = mult_latency+add_latency*2+bram_latency+conv_latency;
end


%% inports
xlsub2_a = xInport('a');
xlsub2_b = xInport('b');
xlsub2_sync = xInport('sync');

%% outports
xlsub2_a_re = xOutport('a_re');
xlsub2_a_im = xOutport('a_im');
xlsub2_bw_re = xOutport('bw_re');
xlsub2_bw_im = xOutport('bw_im');
xlsub2_sync_out = xOutport('sync_out');

%% diagram

% block: twiddles_collections/twiddle_coeff_1/c_to_ri
xlsub2_c_to_ri_out1 = xSignal;
xlsub2_c_to_ri_out2 = xSignal;
xlsub2_c_to_ri = xBlock(struct('source', 'casper_library_misc/c_to_ri', 'name', 'c_to_ri'), ...
                        struct('n_bits', input_bit_width, ...
                               'bin_pt', input_bit_width-1), ...
                        {xlsub2_a}, ...
                        {xlsub2_c_to_ri_out1, xlsub2_c_to_ri_out2});

% block: twiddles_collections/twiddle_coeff_1/c_to_ri1
xlsub2_c_to_ri1_out1 = xSignal;
xlsub2_c_to_ri1_out2 = xSignal;
xlsub2_c_to_ri1 = xBlock(struct('source', 'casper_library_misc/c_to_ri', 'name', 'c_to_ri1'), ...
                         struct('n_bits', input_bit_width, ...
                                'bin_pt', input_bit_width-1), ...
                         {xlsub2_b}, ...
                         {xlsub2_c_to_ri1_out1, xlsub2_c_to_ri1_out2});

% block: twiddles_collections/twiddle_coeff_1/delay0
xlsub2_delay0 = xBlock(struct('source', 'Delay', 'name', 'delay0'), ...
                       struct('latency', latency, ...
                              'reg_retiming', 'on'), ...
                       {xlsub2_c_to_ri_out1}, ...
                       {xlsub2_a_re});

% block: twiddles_collections/twiddle_coeff_1/delay1
xlsub2_delay1 = xBlock(struct('source', 'Delay', 'name', 'delay1'), ...
                       struct('latency', latency, ...
                              'reg_retiming', 'on'), ...
                       {xlsub2_c_to_ri_out2}, ...
                       {xlsub2_a_im});

% block: twiddles_collections/twiddle_coeff_1/delay2
xlsub2_delay2 = xBlock(struct('source', 'Delay', 'name', 'delay2'), ...
                       struct('latency', latency, ...
                              'reg_retiming', 'on'), ...
                       {xlsub2_c_to_ri1_out1}, ...
                       {xlsub2_bw_im});

% block: twiddles_collections/twiddle_coeff_1/delay3
xlsub2_delay3 = xBlock(struct('source', 'Delay', 'name', 'delay3'), ...
                       struct('latency', latency, ...
                              'reg_retiming', 'on'), ...
                       {xlsub2_sync}, ...
                       {xlsub2_sync_out});

% block: twiddles_collections/twiddle_coeff_1/negate
xlsub2_negate = xBlock(struct('source', 'Negate', 'name', 'negate'), ...
                       struct('precision', 'User Defined', ...
                              'n_bits', input_bit_width, ...
                              'bin_pt', input_bit_width-1, ...
                              'latency', latency), ...
                       {xlsub2_c_to_ri1_out2}, ...
                       {xlsub2_bw_re});



end

